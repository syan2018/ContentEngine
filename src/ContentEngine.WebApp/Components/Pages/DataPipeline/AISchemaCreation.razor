@page "/ai-schema-creation"
@using ContentEngine.Core.DataPipeline.Models
@using ContentEngine.Core.AI.Services
@inject NavigationManager NavigationManager
@inject Microsoft.Extensions.Localization.IStringLocalizer<AISchemaCreation> Localizer 
@inject ISchemaSuggestionService SchemaSuggestionService
@inject ILogger<AISchemaCreation> Logger
@attribute [StreamRendering(true)]
@rendermode InteractiveServer

<PageTitle>@Localizer["PageTitle"]</PageTitle>

<div class="container mt-4">
    <h1>@Localizer["PageTitle"]</h1>
    <p class="text-muted mb-4">@Localizer["PageDescription"]</p>

    <!-- Step Indicator -->
    <div class="steps mb-5">
        <div class="step active">@Localizer["Step1"]</div>
        <div class="step">@Localizer["Step2"]</div>
        <div class="step">@Localizer["Step3"]</div>
    </div>

    <div class="row">
        <div class="col">
             <!-- Basic Information Card -->
            <div class="card mb-4">
                <div class="card-header">
                    @Localizer["SchemaBasicsHeader"]
                </div>
                <div class="card-body">
                    <div class="mb-3 row">
                        <label for="schemaName" class="col-sm-3 col-form-label">@Localizer["SchemaNameLabel"]:</label>
                        <div class="col-sm-9">
                             <input type="text" id="schemaName" class="form-control" @bind="SchemaName" placeholder="@Localizer["SchemaNamePlaceholder"]">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="schemaDesc" class="col-sm-3 col-form-label">@Localizer["SchemaDescLabel"]:</label>
                         <div class="col-sm-9">
                            <input type="text" id="schemaDesc" class="form-control" @bind="SchemaDescription" placeholder="@Localizer["SchemaDescPlaceholder"]">
                         </div>
                    </div>
                </div>
            </div>

            <!-- Prompt Input Card -->
            <div class="card mb-4">
                 <div class="card-header">
                    @Localizer["DataNeedsHeader"]
                </div>
                <div class="card-body">
                    <p>@Localizer["DataNeedsInstruction"]</p>
                    <textarea class="form-control" rows="6" @bind="UserPrompt" placeholder="@Localizer["UserPromptPlaceholder"]"></textarea>
                    <div class="text-end mt-3">
                        <button class="btn btn-secondary me-2" @onclick="ShowSampleDialog">@Localizer["AddSampleButton", "添加样例数据"]</button>
                        <button class="btn btn-primary" @onclick="AnalyzePrompt" disabled="@IsAnalyzing">
                            @if (IsAnalyzing)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span class="ms-1">@Localizer["AnalyzingStatus"]</span>
                            }
                            else
                            {
                                <i class="bi bi-magic me-1"></i> <!-- Assuming Bootstrap Icons are available -->
                                <span>@Localizer["AnalyzeButton"]</span>
                            }
                        </button>
                    </div>
                    @if (!string.IsNullOrWhiteSpace(SampleData))
                    {
                        <div class="alert alert-info mt-3">
                            <strong>@Localizer["SampleDataPreviewLabel", "已添加样例"]:</strong>
                            <pre style="white-space:pre-wrap;">@SampleData</pre>
                        </div>
                    }
                </div>
            </div>

            <!-- 样例数据输入弹窗 -->
            @if (SampleDialogVisible)
            {
                <div class="modal fade show d-block" tabindex="-1" style="background:rgba(0,0,0,0.3);">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">@Localizer["SampleDialogTitle", "输入样例数据"]</h5>
                                <button type="button" class="btn-close" @onclick="HideSampleDialog"></button>
                            </div>
                            <div class="modal-body">
                                <textarea class="form-control" rows="8" @bind="SampleDialogText"></textarea>
                                <div class="form-text">@Localizer["SampleDialogTip", "支持文本、CSV、JSON等格式"]</div>
                            </div>
                            <div class="modal-footer">
                                <button class="btn btn-secondary" @onclick="HideSampleDialog">@Localizer["CancelButton", "取消"]</button>
                                <button class="btn btn-primary" @onclick="OnSampleDialogOk">@Localizer["OkButton", "确定"]</button>
                            </div>
                        </div>
                    </div>
                </div>
            }

             <!-- AI Analysis Result Section -->
            @if (SuggestedSchema != null)
            {
                <div class="ai-section card mb-4">
                     <div class="card-header bg-info-subtle">
                        @Localizer["AIResultHeader"]
                    </div>
                    <div class="card-body">
                        @((MarkupString)FormatSchemaSuggestionHtml(SuggestedSchema))
                         <p class="mt-3 text-muted small">@Localizer["AIRefineInstruction"]</p>
                    </div>
                </div>
            }
             @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                 <div class="alert alert-danger" role="alert">
                    @ErrorMessage
                </div>
            }

            <!-- Navigation / Status Bar -->
            <div class="d-flex justify-content-between mt-4 mb-4">
                 <button class="btn btn-secondary" disabled>@Localizer["PreviousButton"]</button>
                 <button class="btn btn-primary" @onclick="GoToNextStep" disabled="@(SuggestedSchema == null)">@Localizer["NextButton"] <i class="bi bi-arrow-right"></i></button>
            </div>
        </div>
    </div>
</div>

@code {
    private string SchemaName { get; set; } = "";
    private string SchemaDescription { get; set; } = "";
    private string UserPrompt { get; set; } = "";
    private string ErrorMessage { get; set; } = "";
    private bool IsAnalyzing { get; set; } = false;

    private SchemaDefinition? SuggestedSchema { get; set; }

    // 样例数据相关
    private string? SampleData { get; set; }
    private bool SampleDialogVisible { get; set; } = false;
    private string SampleDialogText { get; set; } = string.Empty;

    private void ShowSampleDialog()
    {
        SampleDialogText = SampleData ?? string.Empty;
        SampleDialogVisible = true;
    }
    private void HideSampleDialog()
    {
        SampleDialogVisible = false;
    }
    private void OnSampleDialogOk()
    {
        SampleData = SampleDialogText;
        SampleDialogVisible = false;
    }

    private async Task AnalyzePrompt()
    {
        IsAnalyzing = true;
        ErrorMessage = string.Empty;
        SuggestedSchema = null;
        StateHasChanged();

        if (string.IsNullOrWhiteSpace(UserPrompt) || string.IsNullOrWhiteSpace(SchemaName))
        {
            ErrorMessage = Localizer["MissingInputError"];
            IsAnalyzing = false;
            StateHasChanged();
            return;
        }

        try
        {
            SuggestedSchema = await SchemaSuggestionService.SuggestSchemaAsync(UserPrompt, SchemaName, SchemaDescription, SampleData);
            if (SuggestedSchema == null || SuggestedSchema.Fields == null || SuggestedSchema.Fields.Count == 0)
            {
                ErrorMessage = Localizer["NoFieldsSuggested"];
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "AI schema suggestion failed.");
            ErrorMessage = $"{Localizer["AnalysisError"]}: {ex.Message}";
            SuggestedSchema = null;
        }
        finally
        {
            IsAnalyzing = false;
            StateHasChanged();
        }
    }

    private string FormatSchemaSuggestionHtml(SchemaDefinition? schema)
    {
        if (schema == null || schema.Fields == null || schema.Fields.Count == 0)
            return $"<p>{Localizer["NoFieldsSuggested"]}</p>";

        var sb = new System.Text.StringBuilder();
        sb.AppendFormat("<p>{0}</p>", Localizer["AIAnalysisIntro"]);
        sb.AppendLine("<ul>");

        foreach (var field in schema.Fields)
        {
            string typeDisplay = Localizer[$"FieldType{field.Type}"];
            if (field.Type == FieldType.Reference && !string.IsNullOrWhiteSpace(field.ReferenceSchemaName))
            {
                 typeDisplay = Localizer["FieldTypeReferenceLinked", field.ReferenceSchemaName];
            }

            string requiredDisplay = field.IsRequired ? Localizer["FieldRequired"] : Localizer["FieldOptional"];
            string commentDisplay = !string.IsNullOrWhiteSpace(field.Comment) ? $"<span class='text-muted ms-2'>({System.Net.WebUtility.HtmlEncode(field.Comment)})</span>" : string.Empty;

            sb.AppendFormat("<li><strong>{0}:</strong> {1} ({2}) {3}</li>",
                            System.Net.WebUtility.HtmlEncode(field.Name),
                            typeDisplay,
                            requiredDisplay,
                            commentDisplay);
        }
        sb.AppendLine("</ul>");
        return sb.ToString();
    }

    private void GoToNextStep()
    {
        if (SuggestedSchema != null)
        {
            Logger.LogInformation("Proceeding to next step with suggested schema: {SchemaName}", SuggestedSchema.Name);
        }
        else
        {
            ErrorMessage = Localizer["ProceedError"];
        }
    }
}
