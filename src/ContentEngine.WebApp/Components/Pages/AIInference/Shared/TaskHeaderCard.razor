@using ContentEngine.Core.Inference.Models

<MudCard Class="task-header-card mb-4">
    <MudCardContent Class="pa-4">
        <MudGrid Spacing="3" AlignItems="Center.Center">
            <MudItem xs="12" md="8">
                <MudText Typo="Typo.h4" Class="mb-2">@(Definition?.Name ?? "未知任务")</MudText>
                <MudText Typo="Typo.body1" Class="mb-3">@(Definition?.Description ?? "无描述")</MudText>
                <div class="d-flex flex-wrap gap-2">
                    @GetStatusBadge(Instance.Status)
                    <MudChip T="string" Size="Size.Small" Color="Color.Inherit">
                        实例ID: @Instance.InstanceId[..8]...
                    </MudChip>
                    @if (Definition != null)
                    {
                        <MudChip T="string" Size="Size.Small" Color="Color.Secondary">
                            定义ID: @Definition.Id[..8]...
                        </MudChip>
                    }
                </div>
            </MudItem>
            
            <MudItem xs="12" md="4" Class="text-right">
                <MudStack Spacing="2" AlignItems="AlignItems.End">
                    <MudButton Variant="Variant.Filled" 
                              Color="Color.Primary"
                              StartIcon="@Icons.Material.Filled.PlayArrow"
                              OnClick="OnExecute"
                              Disabled="IsExecuting">
                        @if (IsExecuting)
                        {
                            <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                            <span>执行中...</span>
                        }
                        else
                        {
                            <span>执行推理</span>
                        }
                    </MudButton>
                    
                    <div class="d-flex gap-2">
                        <MudButton Variant="Variant.Outlined" 
                                  StartIcon="@Icons.Material.Filled.ContentCopy"
                                  OnClick="OnCopy"
                                  Size="Size.Small">
                            复制任务
                        </MudButton>
                        <MudButton Variant="Variant.Outlined" 
                                  StartIcon="@Icons.Material.Filled.Edit"
                                  OnClick="OnEdit"
                                  Size="Size.Small">
                            编辑
                        </MudButton>
                    </div>
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>

<style>
.task-header-card {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
}

.task-header-card .mud-text-secondary {
    color: rgba(255, 255, 255, 0.8) !important;
}
</style>

@code {
    [Parameter] public ReasoningTransactionInstance Instance { get; set; } = null!;
    [Parameter] public ReasoningTransactionDefinition? Definition { get; set; }
    [Parameter] public bool IsExecuting { get; set; }
    [Parameter] public EventCallback OnExecute { get; set; }
    [Parameter] public EventCallback OnCopy { get; set; }
    [Parameter] public EventCallback OnEdit { get; set; }

    private RenderFragment GetStatusBadge(TransactionStatus status)
    {
        var (text, color) = status switch
        {
            TransactionStatus.Completed => ("已完成", Color.Success),
            TransactionStatus.GeneratingOutputs or TransactionStatus.FetchingData or TransactionStatus.CombiningData => ("运行中", Color.Primary),
            TransactionStatus.Paused => ("已暂停", Color.Warning),
            TransactionStatus.Failed => ("失败", Color.Error),
            _ => ("等待中", Color.Default)
        };
        
        return @<MudChip T="string" Size="Size.Small" Color="@color">@text</MudChip>;
    }
} 