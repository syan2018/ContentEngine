@using ContentEngine.Core.Inference.Models

<MudCard Outlined="true" Class="query-card hover-card">
    <MudCardContent Class="pa-3">
        <div class="d-flex justify-space-between align-center mb-2">
            <MudText Typo="Typo.subtitle1" Class="font-weight-bold">@Query.OutputViewName</MudText>
            @if (ShowActions)
            {
                <div class="d-flex gap-1">
                    @if (OnEdit.HasDelegate)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                      Color="Color.Primary"
                                      Size="Size.Small"
                                      OnClick="() => OnEdit.InvokeAsync(Query)"
                                      Title="编辑查询" />
                    }
                    @if (OnDelete.HasDelegate)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                      Color="Color.Error"
                                      Size="Size.Small"
                                      OnClick="() => OnDelete.InvokeAsync(Query)"
                                      Title="删除查询" />
                    }
                </div>
            }
        </div>
        
        <div class="d-flex justify-space-between mb-1">
            <MudText Typo="Typo.caption" Color="Color.Secondary">数据源:</MudText>
            <MudChip T="string" Size="Size.Small" Color="Color.Primary">@Query.SourceSchemaName</MudChip>
        </div>
        
        @if (!string.IsNullOrWhiteSpace(Query.FilterExpression))
        {
            <div class="d-flex justify-space-between mb-1">
                <MudText Typo="Typo.caption" Color="Color.Secondary">筛选条件:</MudText>
                <code class="filter-expression">@Query.FilterExpression</code>
            </div>
        }
        
        <div class="mb-2">
            <MudText Typo="Typo.caption" Color="Color.Secondary" Class="mb-1">选择字段:</MudText>
            <div class="d-flex flex-wrap gap-1">
                @foreach (var field in Query.SelectFields)
                {
                    <MudChip T="string" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Info">@field</MudChip>
                }
            </div>
        </div>

    </MudCardContent>
</MudCard>

@code {
    [Parameter] public QueryDefinition Query { get; set; } = new();
    [Parameter] public bool ShowActions { get; set; } = false;
    [Parameter] public EventCallback<QueryDefinition> OnEdit { get; set; }
    [Parameter] public EventCallback<QueryDefinition> OnDelete { get; set; }
    
    private bool isExpanded = false;
    
    private void ToggleExpansion()
    {
        isExpanded = !isExpanded;
    }
} 